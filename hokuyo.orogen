name 'hokuyo'

import_types_from "dfki"
import_types_from "stats.h"

using_library 'hokuyo'
if xenomai?
    using_task_library 'ParPortTimestamper'
end

task_context 'LaserAcquisition' do
    needs_configuration
    fd_driven

    property('port', '/std/string', "").
        doc 'the device port'
    property('rate', 'int'        , 115200).
        doc 'the baud rate (only for serial connections)'

    property('start_step',  'int', -1).
        doc 'the step at which to start acquisition'
    property('end_step',    'int', -1).
        doc 'the step at which to end acquisition'
    property('scan_skip',   'int', 0).
        doc 'how much acquisitions to ignore between two acquisitions to report'
    property('merge_count', 'int', 1).
        doc 'how much ranges measurement to merge into one single reported measurement'
    property('test', 'hokuyo/Statistics')

    output_port('period', 'hokuyo/Statistics').
        doc "statistics on the acquisition period"
    output_port('latency', 'hokuyo/Statistics').
        doc "statistics on the acquisition latency"
    input_port('timestamps', 'DFKI/Time').
        doc "if connected, gives the timestamps of the scans"
    output_port('scans', 'DFKI/LaserReadings').
        doc "the laser scans themselves"
end

static_deployment do
    acquisition = task('Task', 'LaserAcquisition')

    if xenomai?
        timestamps = task('Timestamp', 'ParPortTimestamper::Timestamper').
            irq_driven.
            start

        connect timestamps.timestamps, acquisition.timestamps
    end

    add_default_logger

    if !corba_enabled?
        browse acquisition
    end
end

