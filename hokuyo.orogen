name 'hokuyo'
using_toolkit 'dfki'
using_library 'hokuyo'
if xenomai?
    using_task_library 'ParPortTimestamper'
end

toolkit do
    load "stats.h"
end

task_context 'LaserAcquisition' do
    needs_configuration

    property('port', '/std/string', "").
        doc 'the device port'
    property('rate', 'int'        , 115200).
        doc 'the baud rate (only for serial connections)'

    property('start_step',  'int', -1).
        doc 'the step at which to start acquisition'
    property('end_step',    'int', -1).
        doc 'the step at which to end acquisition'
    property('scan_skip',   'int', 0).
        doc 'how much acquisitions to ignore between two acquisitions to report'
    property('merge_count', 'int', 1).
        doc 'how much ranges measurement to merge into one single reported measurement'

    data_port('period', 'hokuyo/Statistics', 'rw').
        doc "statistics on the acquisition period"
    data_port('latency', 'hokuyo/Statistics', 'rw').
        doc "statistics on the acquisition latency"
    buffer_port('timestamps', 'DFKI/Time', 'r').
        doc "if connected, gives the timestamps of the scans"
    buffer_port('scans', 'DFKI/LaserReadings', 10, 'w').
        doc "the laser scans themselves"
end

static_deployment do
    disable_corba
    loglevel :info

    acquisition = task('Acquisition', 'LaserAcquisition').
        fd_driven

    if xenomai?
        timestamps = task('Timestamp', 'ParPortTimestamper::Timestamper').
            irq_driven.
            start

        connect timestamps.timestamps, acquisition.timestamps
    end

    data_logger('scans.log').
        report(acquisition.scans, false).
        period(0.09).
        start

    # Sets up a task browser on the following task
    browse acquisition
end

